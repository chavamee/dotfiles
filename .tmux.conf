set-option -g prefix C-o

set -ga terminal-overrides ",xterm-termite:Tc"

#urxvt tab like window switching (-n: no prior escape seq)
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

# Set status bar
set -g status on
set -g status-position bottom
set -g status-left ""
set -g status-bg default


# pane border
set -g pane-border-status off
#set-option -g pane-active-border-fg 'cyan' #base01
set-option -g pane-active-border-fg '#1d2021' #base01
set-option -g pane-border-fg '#1d2021'

set -g status-right "#[fg=blue,bold]#H"
set -g window-status-format '#[fg=#fbf1c7,bold,bg=default] #W '
set -g window-status-current-format '#[fg=#ffa724,bold,bg=default] #W '
set -g window-status-activity-style underscore,blink

set -g base-index 1
set -g pane-base-index 1
set -g default-shell "/bin/zsh"
set -g set-titles on
set -g set-titles-string "#T"
set -g history-limit 100000
set -g monitor-activity on


# Allows for faster key repetition
set -s escape-time 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

unbind r
bind r source-file ~/.tmux.conf

# active window title colors
set-window-option -g window-status-current-attr bright

# message text
set-option -g message-bg colour235
set-option -g message-fg colour208

setw -g monitor-activity on
set -g visual-activity on

set -g mode-keys vi

# y and p as in vim
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind -t vi-copy 'Space' halfpage-down
bind -t vi-copy 'Bspace' halfpage-up

# extra commands for interacting with the ICCCM clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

#Change split pane bindings and open them in last working directory
bind '|' split-window -h -c '#{pane_current_path}'
bind '-' split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
